version: 2.1

aliases:
  working_directory: &working_directory
    working_directory: ~/bookstore_rg

executors:
  default:
    description: The official CircleCI Ruby Docker image
    parameters:
      tag:
        description: The circleci/ruby Docker image version tag
        type: string
        default: latest
    docker:
      - image: circleci/ruby:<< parameters.tag >>
    environment:
      - RAILS_ENV: test
      - BUNDLE_JOBS: 4
      - BUNDLE_PATH: vendor/bundle
      - BUNDLE_RETRY: 3
    <<: *working_directory

jobs:
  checkout:
    executor: default
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/bookstore_rg
          paths:
            - .

  bundle:
    executor:
      name: default
      tag: "2.7.2"
    steps:
      - attach_workspace:
          at: ~/bookstore_rg
      - restore_cache:
          keys:
            - bundle-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - bundle-v1-{{ arch }}-{{ .Branch }}-
            - bundle-v1-
      - run: |
          bundle check || bundle install && bundle clean
      - save_cache:
          key: bundle-v1-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - persist_to_workspace:
          root: ~/bookstore_rg
          paths:
            - vendor/bundle

  yarn:
    executor:
      name: default
      tag: "2.7.2-node"
    steps:
      - attach_workspace:
          at: ~/bookstore_rg
      - restore_cache:
          keys:
            - yarn-v1-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-v1-{{ arch }}-{{ .Branch }}-
            - yarn-v1-
      - run: |
          yarn install --frozen-lockfile
      - save_cache:
          key: yarn-v1-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/bookstore_rg
          paths:
            - node_modules

  precompile:
    executor:
      name: default
      tag: "2.7.2-node"
    steps:
      - attach_workspace:
          at: ~/bookstore_rg
      - restore_cache:
          keys:
            - precompile-v1-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - precompile-v1-{{ arch }}-{{ .Branch }}
            - precompile-v1-{{ arch }}-
            - precompile-v1-
      - run: bundle exec rake assets:clobber
      - run: bundle exec rake tmp:clear
      - run:
          command: bundle exec rake assets:precompile
      - run: bundle exec rake assets:clean
      - save_cache:
          key: precompile-v1-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - public/packs
            - tmp/cache/webpacker
      - persist_to_workspace:
          root: ~/bookstore_rg
          paths:
            - public/packs
            - tmp/cache/webpacker

  lefthook:
    executor:
      name: default
      tag: "2.7.2-node"
    steps:
      - attach_workspace:
          at: ~/bookstore_rg
      - run: |
          bundle exec lefthook run all

  rspec:
    executor: default
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
      - image: circleci/postgres:12-alpine-ram
        environment:
          POSTGRES_USER: bookstore
          POSTGRES_DB: bookstore_test
          POSTGRES_PASSWORD: password
    parallelism: 2
    steps:
      - attach_workspace:
          at: ~/bookstore_rg
      - run: |
          dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: |
          bundle exec rake db:create db:schema:load --trace
      - run: |
          RUBYOPT='-W:no-deprecated' bundle exec rspec --format RspecJunitFormatter \
                                    --out tmp/test_results/rspec.xml \
                                    $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - run:
          name: Stash Coverage Results
          command: |
            mkdir coverage_results
            cp -R coverage/.resultset.json coverage_results/.resultset-${CIRCLE_NODE_INDEX}.json
      - persist_to_workspace:
          root: .
          paths:
            - coverage_results
      - store_test_results:
          path: tmp/test_results
      - store_artifacts:
          destination: test_results
          path: tmp/test_results
      - store_artifacts:
          destination: capybara
          path: tmp/capybara

workflows:
  version: 2
  default: &default
    jobs:
      - checkout
      - bundle:
          requires:
            - checkout
      - yarn:
          requires:
            - checkout
      - precompile:
          requires:
            - bundle
            - yarn
      - lefthook:
          requires:
            - bundle
            - yarn
      - rspec:
          requires:
            - precompile
