version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
      - image: circleci/postgres:10.10
        environment:
          POSTGRES_USER: circleci
    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem update --system
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Run lintering with lefthook
          command: bundle exec lefthook run pre-commit

      - run:
          name: Bundle Audit
          command: bundle exec bundle-audit check --update --ignore CVE-2015-9284

      - run:
          name: Rubocop
          command: bundle exec rubocop

      - run:
          name: Brakeman
          command: bundle exec brakeman -Aqz

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run:
          name: run tests
          command: |
            mkdir -p /tmp/test-results
            circleci tests glob "spec/**/*_spec.rb" > test_files.txt
            cat test_files.txt | circleci tests split --split-by=timings > split_test_files.txt

            TESTFILES="$(cat split_test_files.txt | xargs)"
            if [ -z "$TESTFILES" ]; then echo  'No tests are scheduled to be executed on this node'; exit 0; fi

            export SPEC="$TESTFILES"
            export SPEC_OPTS="--format documentation --format RspecJunitFormatter --out tmp/rspec/rspec-${CIRCLE_NODE_INDEX:-0}.xml"

            bin/rake spec

      - run:
          name: Code Climate Test Coverage
          command: |
            ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json"
      - persist_to_workspace:
          root: coverage
          paths:
            - codeclimate.*.json

      - store_test_results:
          path: tmp/rspec
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  upload-coverage:
    docker:
      - image: circleci/ruby:2.5.1-stretch-node
    environment:
      CC_TEST_REPORTER_ID: 5666871d0283148b076911196b02a8797b0ad9df9ce987f1ae386b9de3fbe9e8
    working_directory: ~/bikeindex/bike_index

    steps:
      - attach_workspace:
          at: ~/bikeindex/bike_index
      - run:
          name: Install Code Climate Test Reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          command: |
            ./cc-test-reporter sum-coverage --output - codeclimate.*.json | ./cc-test-reporter upload-coverage --debug --input -

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - upload-coverage
