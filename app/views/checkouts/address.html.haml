%main.container
  %h1.general-title-margin Checkout
  %ul.steps.list-inline
    - wizard_steps[1,5].each_with_index do |step, index|
      %li.step{ class: current_step?(step) ? 'active' : 'done'}
        = link_to wizard_path(step), class: 'step-link' do
          %span.step-number
            = index + 1 unless past_step?(step)
            - if past_step?(step)
              %i.fa.fa-check.step-icon
          %span.step-text.hidden-xs= step.capitalize
      - unless step == :complete
        %li.step-divider
  = simple_form_for @current_cart, url: wizard_path, method: :put, class: 'res-mb-100', defaults: { input_html: { class: 'form-control' }, required: false } do |f|
    .hidden-xs.hidden-sm
      .row
        .col-md-5
          %h3.general-subtitle
            = I18n.t('checkout.address.billing_address')
          %p.general-info-text
            = I18n.t('checkout.address.fields_required')
        .col-md-5.col-md-offset-1
          %h3.general-subtitle
            = I18n.t('checkout.address.shipping_address')
      .row
        .col-md-5.mb-40
          .visible-xs.visible-sm
            %h3.general-subtitle
              = I18n.t('checkout.address.billing_address')
            %p.general-info-text
              = I18n.t('checkout.address.fields_required')
          = f.simple_fields_for :billing, @service.billing do |ff|
            .form-group
              = ff.input :first_name, autocomplete: "off", placeholder: "First name"
            .form-group
              = ff.input :last_name, autocomplete: "off", placeholder: "Last name"
            .form-group
              = ff.input :address, autocomplete: "off", placeholder: "Address"
            .form-group
              = ff.input :city, autocomplete: "off", placeholder: "City"
            .form-group
              = ff.input :zipcode, autocomplete: "off", placeholder: "Zipcode"
            .form-group
              = ff.label :country, required: false
              %br/
              = ff.country_select(:country, { priority_countries: ["UA", "US"], priority_countries_divider: "~~~~~~"}, {autocomplete: "off", id: 'сountry', class: 'form-control' })
            .form-group
              = ff.input :phone, placeholder: "Example +355 66 123 4567"
        .col-md-5.col-md-offset-1#hidden_fields
          = f.simple_fields_for :shipping, @service.shipping do |ff|
            .form-group
              = ff.input :first_name, autocomplete: "off", placeholder: "First name"
            .form-group
              = ff.input :last_name, autocomplete: "off", placeholder: "Last name"
            .form-group
              = ff.input :address, autocomplete: "off", placeholder: "Address"
            .form-group
              = ff.input :city, autocomplete: "off", placeholder: "City"
            .form-group
              = ff.input :zipcode, autocomplete: "off", placeholder: "Zipcode"
            .form-group
              = ff.label :country, required: false
              %br/
              = ff.country_select(:country, { priority_countries: ["UA", "US"], priority_countries_divider: "~~~~~~"}, {autocomplete: "off", id: 'сountry', class: 'form-control' })
            .form-group
              = ff.input :phone, placeholder: "Example +355 66 123 4567"
    .row
      .col-md-5.mb-40
        .form-group.checkbox
          = f.input :use_billing, as: :boolean, type: "checkbox", label: I18n.t('checkout.address.use_billing_address'), checked_value: true, unchecked_value: nil, input_html: {class: 'checkbox-input', id: 'hide_address'}
    .general-text-align.mb-60
      %p.in-gold-500.font-18 Order Summary
      %table.general-summary-table
        %tr
          %td
            %p.font-16 Item Total:
          %td
            %p.font-16
              = number_to_currency(current_cart.sub_total, unit: '€')
        %tr
          %td
            %p.font-16 Coupon:
          %td
            %p.font-16
              = number_to_currency(current_cart.discount, unit: '€')
        %tr
          %td
            %p.font-16 Shipping:
          %td
            %p.font-16
              = number_to_currency(current_cart.delivery ? current_cart.delivery.price : 0.00, unit: '€')
        %tr
          %td
            %p.font-16 Order Total:
          %td
            %p.font-16
              = number_to_currency(current_cart.order_total, unit: '€')
      %button.btn.center-block.mb-20
        = f.submit "Save and Continue", class: 'btn btn-default.mb-10'
